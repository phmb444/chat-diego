{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/conversa.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { ScrollShadow } from '@nextui-org/scroll-shadow';\r\n\r\nexport default function Conversa({ mensagens, usuarios, scrollTrigger }: { mensagens: { usuario: string, mensagem: string, data: string }[], usuarios: string[], scrollTrigger: any }) {\r\n    const [currentUser, setCurrentUser] = useState<string | null>(null);\r\n    const messagesEndRef = useRef<HTMLDivElement>(null);\r\n    const messageListRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const user = localStorage.getItem('usuario');\r\n        setCurrentUser(user);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (messagesEndRef.current && messageListRef.current) {\r\n            messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n            // Alternativamente, para scroll suave:\r\n            // messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [scrollTrigger]);\r\n\r\n    return (\r\n        <div\r\n            className=\"message-list overflow-y-auto h-full\" // Ajuste a altura conforme necessÃ¡rio\r\n            ref={messageListRef}\r\n        >\r\n            {mensagens.map((msg, index) => (\r\n                <div key={index} className={`flex ${msg.usuario === currentUser ? 'justify-end' : ''}`}>\r\n                    <div className={`rounded-lg shadow-md max-w-[70%] mt-4 p-4 \r\n                        ${msg.usuario === currentUser \r\n                            ? 'bg-violet-500 text-white mr-4' \r\n                            : 'bg-gray-100 ml-4'}`}>\r\n                        <div className=\"flex flex-col gap-1\">\r\n                            <span className={`text-sm font-semibold \r\n                                ${msg.usuario === currentUser \r\n                                    ? 'text-violet-100' \r\n                                    : 'text-violet-600'}`}>\r\n                                {msg.usuario}\r\n                            </span>\r\n                            <p className=\"text-base text-black break-words\">{msg.mensagem}</p>\r\n                            <span className={`text-xs mt-2 \r\n                                ${msg.usuario === currentUser \r\n                                    ? 'text-violet-200' \r\n                                    : 'text-gray-500'}`}>\r\n                                {new Date(msg.data).toLocaleDateString('pt-BR')}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAIe,SAAS,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAgH;;IACjL,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC9C,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,OAAO,aAAa,OAAO,CAAC;QAClC,eAAe;IACnB,GAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,eAAe,OAAO,IAAI,eAAe,OAAO,EAAE;YAClD,eAAe,OAAO,CAAC,SAAS,GAAG,eAAe,OAAO,CAAC,YAAY;QACtE,uCAAuC;QACvC,iEAAiE;QACrE;IACJ,GAAG;QAAC;KAAc;IAElB,qBACI,6LAAC;QACG,WAAU,sCAAsC,sCAAsC;;QACtF,KAAK;;YAEJ,UAAU,GAAG,CAAC,CAAC,KAAK,sBACjB,6LAAC;oBAAgB,WAAW,CAAC,KAAK,EAAE,IAAI,OAAO,KAAK,cAAc,gBAAgB,GAAG,CAAC;8BAClF,cAAA,6LAAC;wBAAI,WAAW,CAAC;wBACb,EAAE,IAAI,OAAO,KAAK,cACZ,kCACA,mBAAmB,CAAC;kCAC1B,cAAA,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAK,WAAW,CAAC;gCACd,EAAE,IAAI,OAAO,KAAK,cACZ,oBACA,kBAAkB,CAAC;8CACxB,IAAI,OAAO;;;;;;8CAEhB,6LAAC;oCAAE,WAAU;8CAAoC,IAAI,QAAQ;;;;;;8CAC7D,6LAAC;oCAAK,WAAW,CAAC;gCACd,EAAE,IAAI,OAAO,KAAK,cACZ,oBACA,gBAAgB,CAAC;8CACtB,IAAI,KAAK,IAAI,IAAI,EAAE,kBAAkB,CAAC;;;;;;;;;;;;;;;;;mBAjB7C;;;;;0BAuBd,6LAAC;gBAAI,KAAK;;;;;;;;;;;;AAGtB;GAlDwB;KAAA"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(layout)/home/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Conversa from \"@/components/conversa\";\r\nimport { Input } from '@nextui-org/input';\r\nimport { Button } from '@nextui-org/button';\r\n\r\nexport default function Home() {\r\n  const [clicou, setClicou] = useState(false);\r\n  const [messages, setMessages] = useState<{ mensagens: { usuario: string, mensagem: string, data: string }[], usuarios: string[] }>({ mensagens: [], usuarios: [] });\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [scrollTrigger, setScrollTrigger] = useState(0);\r\n  const [showCreate, setShowCreate] = useState(false);\r\n  const [newSalaName, setNewSalaName] = useState(\"\");\r\n\r\n  interface Sala {\r\n    _id: string;\r\n    nome: string;\r\n    mensagens: { mensagem: string }[];\r\n  }\r\n\r\n  const [salas, setSalas] = useState<Sala[]>([]);\r\n  const [salaAtualId, setSalaAtualId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchSalas(token);\r\n    }\r\n  }, []);\r\n\r\n  const fetchSalas = (token: string) => {\r\n    fetch('https://chat-api-pi-hazel.vercel.app/salas', {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setSalas(data);\r\n      })\r\n      .catch(error => console.error('Error fetching chat rooms:', error));\r\n  };\r\n\r\n  const fetchMessages = useCallback(() => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('fetching messages');\r\n    if (token && salaAtualId) {\r\n      fetch(`https://chat-api-pi-hazel.vercel.app/mensagens/${salaAtualId}`, {\r\n        mode: 'cors',\r\n        headers: {\r\n          'Authorization': token\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setMessages(data);\r\n          setScrollTrigger(prev => prev + 1);\r\n        })\r\n        .catch(error => console.error('Error fetching messages:', error));\r\n    }\r\n  }, [salaAtualId]);\r\n\r\n  const handleCreateSala = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token && newSalaName.trim() !== \"\") {\r\n      try {\r\n        const response = await fetch('https://chat-api-pi-hazel.vercel.app/salas', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n          },\r\n          body: JSON.stringify({\r\n            nome: newSalaName,\r\n            tipo: \"publica\",\r\n            chave: \"\"\r\n          })\r\n        });\r\n        if (response.ok) {\r\n          setNewSalaName(\"\");\r\n          setShowCreate(false);\r\n          fetchSalas(token);\r\n        } else {\r\n          console.error('Failed to create room');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating room:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (salaAtualId) {\r\n      fetchMessages();\r\n      const intervalId = setInterval(fetchMessages, 10000);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [salaAtualId, fetchMessages]);\r\n\r\n  const handleSalaClick = (salaId: string) => {\r\n    setClicou(true);\r\n    setSalaAtualId(salaId);\r\n    handleJoinRoom(salaId);\r\n  };\r\n\r\n  const handleJoinRoom = async (salaId: string) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await fetch('https://chat-api-pi-hazel.vercel.app/salas/entrar', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n          },\r\n          body: JSON.stringify({ salaId })\r\n        });\r\n        if (response.ok) {\r\n          console.log('Successfully joined the room');\r\n          // Additional logic after joining the room\r\n        } else {\r\n          console.error('Failed to join the room');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error joining the room:', error);\r\n      }\r\n    } else {\r\n      console.error('No token found');\r\n    }\r\n  };\r\n\r\n  const handleLeaveRoom = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await fetch('https://chat-api-pi-hazel.vercel.app/salas/sair', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n          },\r\n          body: JSON.stringify({ salaId: salaAtualId })\r\n        });\r\n        if (response.ok) {\r\n          console.log('Successfully left the room');\r\n          // Additional logic after leaving the room\r\n        } else {\r\n          console.error('Failed to leave the room');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error leaving the room:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSendMessage = async () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('sending message');\r\n    if (token && salaAtualId) {\r\n      const response = await fetch('https://chat-api-pi-hazel.vercel.app/mensagens', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token\r\n        },\r\n        body: JSON.stringify({\r\n          mensagem: newMessage,\r\n          salaId: salaAtualId\r\n        })\r\n      });\r\n      if (response.ok) {\r\n        setNewMessage(\"\");\r\n        fetchMessages();\r\n      } else {\r\n        console.error('Failed to send message');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"md:flex h-screen max-h-[88vh] gap-4\">\r\n      <section className=\"border-2 border-purple-700 rounded-lg md:w-96 mr-4 mb-4 bg-gray-800 shadow-lg transform transition-all hover:border-purple-500\">\r\n        <h2 className=\"p-4 font-bold text-2xl text-purple-400 border-b border-purple-700\">Salas</h2>\r\n        <div className=\"p-4\">\r\n          <Button onClick={() => setShowCreate(!showCreate)} className=\"mb-4 w-full\">Criar Sala</Button>\r\n          {showCreate && (\r\n            <div className=\"flex mb-4\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Nome da sala\"\r\n                value={newSalaName}\r\n                onChange={(e) => setNewSalaName(e.target.value)}\r\n                className=\"flex-grow mr-2\"\r\n              />\r\n              <Button onClick={handleCreateSala}>Enviar</Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"overflow-y-auto max-h-[calc(100vh-8rem)]\">\r\n          {salas.map((sala) => (\r\n            <div\r\n              key={sala._id}\r\n              className={`p-4 flex rounded-lg hover:cursor-pointer transition-colors duration-200 \r\n                ${salaAtualId === sala._id ? 'bg-purple-900/50' : 'hover:bg-gray-700'}`}\r\n              onClick={() => handleSalaClick(sala._id)}\r\n            >\r\n              <div className=\"w-full\">\r\n                <p className=\"font-bold text-purple-300 mb-1\">{sala.nome}</p>\r\n                <p className=\"text-gray-400 text-sm truncate\">\r\n                  {sala.mensagens.length > 0 ? sala.mensagens[sala.mensagens.length - 1].mensagem : 'Sem mensagens'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <main className=\"border-2 border-violet-700 rounded-lg md:w-3/4 bg-gray-800 shadow-lg flex flex-col\">\r\n        {clicou && (\r\n          <div className=\"p-4 flex justify-between border-b border-violet-700 bg-gray-800\">\r\n            <div>\r\n              <p className=\"font-bold text-violet-300\">UsuÃ¡rios</p>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {messages.usuarios.length > 0 ? (\r\n                  messages.usuarios.map((usuario, index) => (\r\n                    <p key={index} className=\"text-purple-300 text-sm\"> | {usuario}</p>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-gray-400 text-sm\">Nenhum usuÃ¡rio online</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <button\r\n              className=\"p-2 rounded-lg hover:bg-red-500/20 transition-colors duration-200\"\r\n              onClick={() => { setClicou(false); handleLeaveRoom(); }}\r\n            >\r\n              <img src=\"x.svg\" className=\"w-6 h-6 opacity-70 hover:opacity-100\" alt=\"Fechar\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {clicou && (\r\n          <>\r\n            <Conversa mensagens={messages.mensagens} usuarios={messages.usuarios} scrollTrigger={scrollTrigger} />\r\n            <div className=\"p-4 items-center flex\">\r\n              <Input\r\n                type=\"text\"\r\n                className=\"flex-grow p-2 rounded-l-lg text-white focus:outline-none\"\r\n                placeholder=\"Escreva sua mensagem...\"\r\n                value={newMessage}\r\n                onValueChange={setNewMessage}\r\n              />\r\n              <Button\r\n                onClick={handleSendMessage}\r\n                className=\"p-2 bg-purple-700 text-white rounded-r-lg hover:bg-purple-600\"\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {!clicou && (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <p className=\"text-gray-400 text-lg\">\r\n              Selecione uma sala para iniciar a conversa\r\n            </p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4F;QAAE,WAAW,EAAE;QAAE,UAAU,EAAE;IAAC;IACjK,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAQ/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAM,aAAa,CAAC;QAClB,MAAM,8CAA8C;YAClD,SAAS;gBACP,iBAAiB;YACnB;QACF,GACG,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;YACJ,SAAS;QACX,GACC,KAAK,CAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,8BAA8B;IAChE;IAEA,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD,EAAE;QAChC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,QAAQ,GAAG,CAAC;QACZ,IAAI,SAAS,aAAa;YACxB,MAAM,CAAC,+CAA+C,EAAE,YAAY,CAAC,EAAE;gBACrE,MAAM;gBACN,SAAS;oBACP,iBAAiB;gBACnB;YACF,GACG,IAAI,CAAC,CAAA,WAAY,SAAS,IAAI,IAC9B,IAAI,CAAC,CAAA;gBACJ,YAAY;gBACZ,iBAAiB,CAAA,OAAQ,OAAO;YAClC,GACC,KAAK,CAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,4BAA4B;QAC9D;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,mBAAmB;QACvB,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,SAAS,YAAY,IAAI,OAAO,IAAI;YACtC,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,8CAA8C;oBACzE,QAAQ;oBACR,SAAS;wBACP,gBAAgB;wBAChB,iBAAiB;oBACnB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB,MAAM;wBACN,MAAM;wBACN,OAAO;oBACT;gBACF;gBACA,IAAI,SAAS,EAAE,EAAE;oBACf,eAAe;oBACf,cAAc;oBACd,WAAW;gBACb,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;YACxC;QACF;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf;YACA,MAAM,aAAa,YAAY,eAAe;YAC9C,OAAO,IAAM,cAAc;QAC7B;IACF,GAAG;QAAC;QAAa;KAAc;IAE/B,MAAM,kBAAkB,CAAC;QACvB,UAAU;QACV,eAAe;QACf,eAAe;IACjB;IAEA,MAAM,iBAAiB,OAAO;QAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,qDAAqD;oBAChF,QAAQ;oBACR,SAAS;wBACP,gBAAgB;wBAChB,iBAAiB;oBACnB;oBACA,MAAM,KAAK,SAAS,CAAC;wBAAE;oBAAO;gBAChC;gBACA,IAAI,SAAS,EAAE,EAAE;oBACf,QAAQ,GAAG,CAAC;gBACZ,0CAA0C;gBAC5C,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QACF,OAAO;YACL,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,MAAM,kBAAkB;QACtB,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,mDAAmD;oBAC9E,QAAQ;oBACR,SAAS;wBACP,gBAAgB;wBAChB,iBAAiB;oBACnB;oBACA,MAAM,KAAK,SAAS,CAAC;wBAAE,QAAQ;oBAAY;gBAC7C;gBACA,IAAI,SAAS,EAAE,EAAE;oBACf,QAAQ,GAAG,CAAC;gBACZ,0CAA0C;gBAC5C,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QACF;IACF;IAEA,MAAM,oBAAoB;QACxB,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,QAAQ,GAAG,CAAC;QACZ,IAAI,SAAS,aAAa;YACxB,MAAM,WAAW,MAAM,MAAM,kDAAkD;gBAC7E,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,iBAAiB;gBACnB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,UAAU;oBACV,QAAQ;gBACV;YACF;YACA,IAAI,SAAS,EAAE,EAAE;gBACf,cAAc;gBACd;YACF,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAQ,WAAU;;kCACjB,6LAAC;wBAAG,WAAU;kCAAoE;;;;;;kCAClF,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,sNAAA,CAAA,SAAM;gCAAC,SAAS,IAAM,cAAc,CAAC;gCAAa,WAAU;0CAAc;;;;;;4BAC1E,4BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mNAAA,CAAA,QAAK;wCACJ,MAAK;wCACL,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;;;;;;kDAEZ,6LAAC,sNAAA,CAAA,SAAM;wCAAC,SAAS;kDAAkB;;;;;;;;;;;;;;;;;;kCAIzC,6LAAC;wBAAI,WAAU;kCACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;gCAEC,WAAW,CAAC;gBACV,EAAE,gBAAgB,KAAK,GAAG,GAAG,qBAAqB,oBAAoB,CAAC;gCACzE,SAAS,IAAM,gBAAgB,KAAK,GAAG;0CAEvC,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAE,WAAU;sDAAkC,KAAK,IAAI;;;;;;sDACxD,6LAAC;4CAAE,WAAU;sDACV,KAAK,SAAS,CAAC,MAAM,GAAG,IAAI,KAAK,SAAS,CAAC,KAAK,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,QAAQ,GAAG;;;;;;;;;;;;+BARjF,KAAK,GAAG;;;;;;;;;;;;;;;;0BAgBrB,6LAAC;gBAAK,WAAU;;oBACb,wBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAA4B;;;;;;kDACzC,6LAAC;wCAAI,WAAU;kDACZ,SAAS,QAAQ,CAAC,MAAM,GAAG,IAC1B,SAAS,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,sBAC9B,6LAAC;gDAAc,WAAU;;oDAA0B;oDAAI;;+CAA/C;;;;sEAGV,6LAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;;;;;;0CAI3C,6LAAC;gCACC,WAAU;gCACV,SAAS;oCAAQ,UAAU;oCAAQ;gCAAmB;0CAEtD,cAAA,6LAAC;oCAAI,KAAI;oCAAQ,WAAU;oCAAuC,KAAI;;;;;;;;;;;;;;;;;oBAK3E,wBACC;;0CACE,6LAAC,0HAAA,CAAA,UAAQ;gCAAC,WAAW,SAAS,SAAS;gCAAE,UAAU,SAAS,QAAQ;gCAAE,eAAe;;;;;;0CACrF,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mNAAA,CAAA,QAAK;wCACJ,MAAK;wCACL,WAAU;wCACV,aAAY;wCACZ,OAAO;wCACP,eAAe;;;;;;kDAEjB,6LAAC,sNAAA,CAAA,SAAM;wCACL,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;;;oBAON,CAAC,wBACA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;AAQjD;GA1QwB;KAAA"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}